COMMAND="$1"
shift

CLUSTER=$1
CLUSTER_ROOT="$CLUSTER_ROOT/$MYSQL_VERSION/$CLUSTER"

cd $MYSQL_CURRENT_ROOT


DB_INSTALL="scripts/mysql_install_db"
if [ ! -e $DB_INSTALL ]; then
	DB_INSTALL="bin/mysql_install_db"
fi

CLUSTER_DATA_PATH="$CLUSTER_ROOT/data"
MYSQL_CONF="$CLUSTER_ROOT/my.cnf"

cluster_create()
{
	mkdir -p $CLUSTER_ROOT
	mkdir -p $CLUSTER_DATA_PATH
	$DB_INSTALL --basedir=$MYSQL_CURRENT_ROOT --datadir=$CLUSTER_DATA_PATH --ldata=$CLUSTER_DATA_PATH --no-defaults > /dev/null 2>&1

	# setting my.cnf
	#cp "$MYSQL_CURRENT_ROOT/support-files/my-medium.cnf" $MYSQL_CONF
	if [ `echo $MYSQL_VERSION|grep '5.7'` ]; then
		echo 'after...'
	elif [ `echo $MYSQL_VERSION|grep '5.6'` ]; then
		curl https://raw.github.com/kazeburo/mysetup/master/mysql/my56.cnf -o $MYSQL_CONF > /dev/null 2>&1
		sed -i -e "s%/var/lib/mysql%$CLUSTER_DATA_PATH%g" $MYSQL_CONF
		sed -i -e "s/<SERVER_ID>/1/g" $MYSQL_CONF
	elif [ `echo $MYSQL_VERSION|grep '5.7'` ]; then
		curl https://raw.github.com/kazeburo/mysetup/master/mysql/my55.cnf -o $MYSQL_CONF > /dev/null 2>&1
	elif [ `echo $MYSQL_VERSION|grep '5.1'` ]; then
		curl https://raw.github.com/kazeburo/mysetup/master/mysql/my51.cnf -o $MYSQL_CONF > /dev/null 2>&1
	elif [ `echo $MYSQL_VERSION|grep '4.'` ]; then
		curl https://raw.github.com/kazeburo/mysetup/master/mysql/my40.cnf -o $MYSQL_CONF > /dev/null 2>&1
	elif [ `echo $MYSQL_VERSION|grep '3.'` ]; then
		curl https://raw.github.com/kazeburo/mysetup/master/mysql/my40.cnf -o $MYSQL_CONF > /dev/null 2>&1
	fi

	# set port
	VERSION_STRING=`echo $MYSQL_VERSION|sed -e "s/\.//g"`
	sed -i -e "s/port.*$/port = $VERSION_STRING/g" $MYSQL_CONF

	# set hostname
	HOSTNAME=`hostname`
	sed -i -e "s/<HOSTNAME>/$HOSTNAME/g" $MYSQL_CONF

	#root's default password is 'password'
	#"$MYSQLVC_BIN_ROOT/mysqladmin" -u root password "password"

	echo "MySQL base directory is $MYSQL_CURRENT_ROOT."
	echo "Setting File is $MYSQL_CONF."
}

cluster_delete()
{
	#echo $CLUSTER_ROOT
	rm -rf $CLUSTER_ROOT
}

cluster_start()
{
	echo -n "MySQL start"
	OPTION="--defaults-file=$MYSQL_CONF --basedir=$MYSQL_CURRENT_ROOT --datadir=$CLUSTER_DATA_PATH --log-error=$CLUSTER_DATA_PATH/mysqlvc.err"
	"bin/mysqld_safe" $OPTION > /dev/null 2>&1 &

	TIMEOUT=60
	STEP=1
	HOSTNAME=`hostname`
	while [ ! -f "$CLUSTER_DATA_PATH/$HOSTNAME.pid" ]; do
		STEP=$(($STEP + 1))
		echo -n '.'
		if [ $STEP -eq $TIMEOUT ]; then
			echo "Timeout"
			exit
		fi
		sleep 1
	done
	echo ""
}

cluster_stop()
{
	"bin/mysqladmin" --defaults-file=$MYSQL_CONF -u root shutdown
}

cluster_use()
{
	OPTION="--defaults-file=$MYSQL_CONF"
	"bin/mysql" $OPTION
}

case $COMMAND in
create)
	cluster_create
	;;
delete)
	cluster_delete
	;;
list)
	ls "$CLUSTER_ROOT"| while read version; do
		echo $version
	done
	;;
start)
	cluster_start
	;;
stop)
	cluster_stop
	;;
use)
	cluster_use
	;;
esac
